server {
    # listen 80;
    server_name  dev.auth.service.viewportmedia.org www.dev.auth.service.viewportmedia.org;
    # server_name  localhost; # running nginx locally inside of docker

    access_log  /var/log/nginx/host.access.log  main;

    #location / {
    #    root   /var/appdata/devauthspa/public/;
    #    index  index.html index.htm;
    #}

    #root   /var/appdata/authServiceDev/server/public/;
    #index  index.html index.htm;

    #error_page  404              /404.html;

    # redirect server error pages to the static page /50x.html
    #
    #error_page   500 502 503 504  /50x.html;
    #location = /50x.html {
    #    root   /usr/share/nginx/html;
    #}

    # serve static files
    #location ~ ^/(images|javascript|js|css|flash|media|static)/  {
    #  root    /var/appdata/devauthspa/public/;
    #  index  index.html index.htm;
    #  expires 30d;
    #}

    location / {
        proxy_set_header   X-Forwarded-For $remote_addr; # required to pass secure cookie
        proxy_set_header   X-Forwarded-Proto $scheme; # required to pass secure cookie
        proxy_set_header   Host $http_host;
        proxy_pass   http://127.0.0.1:7777; # running node locally outside of docker
        # proxy_pass         http://0.0.0.0:7777; # node is running at 0.0.0.0:7777 inside of docker
    }

    # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
    #
    #location ~ \.php$ {
    #    root           html;
    #    fastcgi_pass   127.0.0.1:9000;
    #    fastcgi_index  index.php;
    #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
    #    include        fastcgi_params;
    #}

    # deny access to .htaccess files, if Apache's document root
    # concurs with nginx's one
    #
    #location ~ /\.ht {
    #    deny  all;
    #}

    listen 443 ssl; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/dev.auth.service.viewportmedia.org/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/dev.auth.service.viewportmedia.org/privkey.pem; # managed by Certbot
    include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

}

server {
    if ($host = dev.auth.service.viewportmedia.org) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    listen 80;
    server_name  dev.auth.service.viewportmedia.org www.dev.auth.service.viewportmedia.org;
    return 404; # managed by Certbot
}